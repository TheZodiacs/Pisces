# read config info into this namespace
configfile: "config.yaml"

output_folder = config["output"]
temp_folder = config["temp"]

threads = config["threads"]
bwa_index = temp_folder+"/refdata-cellranger-atac-GRCh38-1.2.0/fasta/genome.fa"
flash_bin = config["flash_bin"]

rule get_bwa_index:
    """Download genome bwa index"""
    output:
        bwa_index
    threads: 1
    message: "Downloading cellranger human bwa index"
    shell:
        """
        mkdir -p {temp_folder}
        cd {temp_folder}
        wget https://cf.10xgenomics.com/supp/cell-atac/refdata-cellranger-atac-GRCh38-1.2.0.tar.gz
        tar -xvzf refdata-cellranger-atac-GRCh38-1.2.0.tar.gz
        rm refdata-cellranger-atac-GRCh38-1.2.0.tar.gz
        """

rule get_reads:
    input:
        r1 = config["reads"]["r1"],
        r2 = config["reads"]["r2"],
        r3 = config["reads"]["r3"],
    output:
        r1 = pipe(temp_folder+"/p1.fa"),
        r2 = pipe(temp_folder+"/p2.fa"),
    shell:
        """
        paste <(gunzip -c {input.r2}) <(gunzip -c {input.r1}) <(gunzip -c {input.r3}) |  paste - - - - | awk -F'\t' -v one="{output.r1}" -v two="{output.r2}" '{{ OFS="\\n"; split($1, a, " "); print a[1]"_"$4,$5,$7,$11 >> one; print a[1]"_"$4,$6,$8,$12 >> two}}'
        """

rule align:
    input:
        index = bwa_index,
        r1 = temp_folder+"/p1.fa",
        r2 = temp_folder+"/p2.fa",
    output:
        output_folder+"/out.bam"
    threads: threads - 2
    message: "Align reads"
    shell:
        """
        mkdir -p {output_folder}
        bwa-mem2 mem -t {threads} {input.index} {input.r1} {input.r2} | samtools view -bS - > {output}
        """

rule fragments:
    input:
        output_folder+"/out.bam"
    output:
        output_folder+"/fragments.bed"
    threads: threads
    message: "Create fragment files"
    shell:
        """
        OBAM={output_folder}/out.sort.bam
        samtools sort -@ {threads} {input} > $OBAM
        samtools index $OBAM
        sinto fragments -b $OBAM -p {threads} -f {output} --barcode_regex "[^:]*"
        """

rule sort_frags:
    input:
        output_folder+"/fragments.bed"
    output:
        output_folder+"/fragments.sort.bed.gz"
    threads: 5
    message: "Sort, compress, and index individual fragment files"
    shell:
        """
        sort -k1,1 -k2,2n {input} | bgzip > {output}
        tabix -p bed {output}
        """

rule callpeaks:
    input:
        output_folder+"/out.bam"
    output:
        output_folder+"/peaks.bed"
    threads: threads
    message: "Call peaks"
    shell:
        """
        Genrich -t {input} -o {output} -j
        """

rule flash:
    input:
        output_folder+"/out.bam"
    output:
        output_folder+"/flash.corrected.sorted.grouped.bed"
    shell:
        """
        RUST_LOG="trace" /usr/bin/time {flash_bin} filter -i {input} -o {output_folder}/flash.bed
        RUST_LOG="trace" /usr/bin/time {flash_bin} correct -i {output_folder}/flash.bed
        RUST_LOG="trace" /usr/bin/time {flash_bin} sort -i {output_folder}/flash.corrected.bed
        RUST_LOG="trace" /usr/bin/time {flash_bin} group -i {output_folder}/flash.corrected.sorted.bed
        """